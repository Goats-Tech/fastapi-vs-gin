// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0
// source: queries.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const read = `-- name: Read :many
SELECT name, value FROM product
LIMIT $1
`

func (q *Queries) Read(ctx context.Context, limit int32) ([]Product, error) {
	rows, err := q.db.Query(ctx, read, limit)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Product
	for rows.Next() {
		var i Product
		if err := rows.Scan(&i.Name, &i.Value); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const write = `-- name: Write :exec
INSERT INTO
    product (name, value)
VALUES
    ($1, $2)
`

type WriteParams struct {
	Name  string         `json:"name"`
	Value pgtype.Numeric `json:"value"`
}

func (q *Queries) Write(ctx context.Context, arg WriteParams) error {
	_, err := q.db.Exec(ctx, write, arg.Name, arg.Value)
	return err
}
